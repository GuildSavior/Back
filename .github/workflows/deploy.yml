name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Password1!
          MYSQL_DATABASE: guildSavior_test
          # ⭐ RETIRER MYSQL_USER car root existe déjà
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, mysqli, pdo_mysql, zip, curl, openssl, tokenizer, xml

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader --no-dev

      - name: Create .env.testing file
        run: |
          cat > .env.testing << EOF
          APP_ENV=testing
          APP_KEY=base64:K2ZCnY7EvbXByjA+A3XCUaux2cJdHZX8BMx6h9vrcKs=
          APP_DEBUG=true
          APP_URL=http://localhost
          
          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=guildSavior_test
          DB_USERNAME=root
          DB_PASSWORD=Password1!
          
          CACHE_DRIVER=array
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=array
          MAIL_MAILER=array
          EOF

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h127.0.0.1 -uroot -pPassword1! -e "SELECT 1"; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Create database
        run: mysql -h127.0.0.1 -uroot -pPassword1! -e "CREATE DATABASE IF NOT EXISTS guildSavior_test;"

      - name: Clear Laravel caches
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear

      - name: Run migrations
        run: php artisan migrate --env=testing --force

      - name: Run tests
        run: php artisan test --env=testing

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: 82.112.255.241
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/Back
            git pull origin main
            composer install --optimize-autoloader --no-dev
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl reload nginx
            sudo systemctl restart php8.2-fpm
